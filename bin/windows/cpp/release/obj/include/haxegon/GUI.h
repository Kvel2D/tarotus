// Generated by Haxe 3.3.0
#ifndef INCLUDED_haxegon_GUI
#define INCLUDED_haxegon_GUI

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxegon,GUI)

namespace haxegon{


class HXCPP_CLASS_ATTRIBUTES GUI_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GUI_obj OBJ_;
		GUI_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxegon.GUI")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"haxegon.GUI"); }
		static hx::ObjectPtr< GUI_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GUI_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("GUI","\x5b","\x2a","\x36","\x00"); }

		static void __boot();
		static Float x;
		static Float y;
		static  ::Dynamic slider_cache;
		static Int button_off_color;
		static Int button_on_color;
		static Int button_text_color;
		static Int slider_background_color;
		static Int slider_handle_color;
		static Int slider_text_color;
		static void set_pallete(Int passive,Int active,Int text);
		static ::Dynamic set_pallete_dyn();

		static void image_button(Float x,Float y,::String image, ::Dynamic button_function);
		static ::Dynamic image_button_dyn();

		static void auto_text_button(::String text, ::Dynamic button_function,hx::Null< Int >  skips);
		static ::Dynamic auto_text_button_dyn();

		static void text_button(Float button_x,Float button_y,::String text, ::Dynamic button_function);
		static ::Dynamic text_button_dyn();

		static void auto_slider(::String text, ::Dynamic set_function,Float current,Float min,Float max,Float handle_width,Float area_width,hx::Null< Int >  skips);
		static ::Dynamic auto_slider_dyn();

		static void slider(Float slider_x,Float slider_y,::String text, ::Dynamic set_function,Float current,Float min,Float max,Float handle_width,Float area_width,hx::Null< Int >  skips);
		static ::Dynamic slider_dyn();

		static void enum_setter(Float setter_x,Float setter_y, ::Dynamic set_function, ::Dynamic current, ::Dynamic enum_type);
		static ::Dynamic enum_setter_dyn();

};

} // end namespace haxegon

#endif /* INCLUDED_haxegon_GUI */ 
