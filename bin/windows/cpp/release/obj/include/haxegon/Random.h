// Generated by Haxe 3.3.0
#ifndef INCLUDED_haxegon_Random
#define INCLUDED_haxegon_Random

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxegon,Random)

namespace haxegon{


class HXCPP_CLASS_ATTRIBUTES Random_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Random_obj OBJ_;
		Random_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxegon.Random")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"haxegon.Random"); }
		static hx::ObjectPtr< Random_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Random_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Random","\x23","\x96","\x23","\xec"); }

		static void __boot();
		static Int temp;
		static Int seed;
		static Float randn_x1;
		static Float randn_x2;
		static Bool randn_call;
		static Float randn(Float mean,Float variance);
		static ::Dynamic randn_dyn();

		static ::cpp::VirtualArray shuffle(::cpp::VirtualArray array);
		static ::Dynamic shuffle_dyn();

		static Bool _hx_bool();
		static ::Dynamic _hx_bool_dyn();

		static Bool occasional();
		static ::Dynamic occasional_dyn();

		static Bool rare();
		static ::Dynamic rare_dyn();

		static Bool chance(Int n);
		static ::Dynamic chance_dyn();

		static Int _hx_int(Int from,Int to);
		static ::Dynamic _hx_int_dyn();

		static Float _hx_float(Float from,Float to);
		static ::Dynamic _hx_float_dyn();

		static ::String string(Int length,::String charactersToUse);
		static ::Dynamic string_dyn();

		static ::String pickstring(::String s1,::String s2,::String s3,::String s4,::String s5,::String s6,::String s7,::String s8,::String s9,::String s10,::String s11,::String s12);
		static ::Dynamic pickstring_dyn();

		static Int pick_int(Int s1,Int s2,hx::Null< Int >  s3,hx::Null< Int >  s4,hx::Null< Int >  s5,hx::Null< Int >  s6,hx::Null< Int >  s7,hx::Null< Int >  s8,hx::Null< Int >  s9,hx::Null< Int >  s10,hx::Null< Int >  s11,hx::Null< Int >  s12);
		static ::Dynamic pick_int_dyn();

		static Float pickfloat(Float s1,Float s2,hx::Null< Float >  s3,hx::Null< Float >  s4,hx::Null< Float >  s5,hx::Null< Float >  s6,hx::Null< Float >  s7,hx::Null< Float >  s8,hx::Null< Float >  s9,hx::Null< Float >  s10,hx::Null< Float >  s11,hx::Null< Float >  s12);
		static ::Dynamic pickfloat_dyn();

		static  ::Dynamic pick(::cpp::VirtualArray arr);
		static ::Dynamic pick_dyn();

};

} // end namespace haxegon

#endif /* INCLUDED_haxegon_Random */ 
