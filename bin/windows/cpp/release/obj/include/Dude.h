// Generated by Haxe 3.3.0
#ifndef INCLUDED_Dude
#define INCLUDED_Dude

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_Entity
#include <Entity.h>
#endif
HX_DECLARE_CLASS0(Dude)
HX_DECLARE_CLASS0(Entity)



class HXCPP_CLASS_ATTRIBUTES Dude_obj : public  ::Entity_obj
{
	public:
		typedef  ::Entity_obj super;
		typedef Dude_obj OBJ_;
		Dude_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Dude")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Dude"); }
		static hx::ObjectPtr< Dude_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Dude_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Dude","\x72","\xa1","\x4b","\x2d"); }

		static void __boot();
		static  ::Dynamic classs;
		static ::Array< ::String > names;
		Int x;
		Int y;
		Int real_x;
		Int real_y;
		Bool active;
		Bool attacked;
		Bool moved;
		Int dx;
		Int dy;
		Bool dead;
		Int hp;
		Int hp_max;
		::String name;
		::String info;
};


#endif /* INCLUDED_Dude */ 
