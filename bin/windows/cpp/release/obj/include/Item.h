// Generated by Haxe 3.3.0
#ifndef INCLUDED_Item
#define INCLUDED_Item

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_Entity
#include <Entity.h>
#endif
HX_DECLARE_CLASS0(ArmorType)
HX_DECLARE_CLASS0(ConsumableType)
HX_DECLARE_CLASS0(Entity)
HX_DECLARE_CLASS0(Item)
HX_DECLARE_CLASS0(ItemType)
HX_DECLARE_CLASS0(WeaponType)



class HXCPP_CLASS_ATTRIBUTES Item_obj : public  ::Entity_obj
{
	public:
		typedef  ::Entity_obj super;
		typedef Item_obj OBJ_;
		Item_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Item")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Item"); }
		static hx::ObjectPtr< Item_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Item_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Item","\x33","\xf1","\x98","\x30"); }

		Int x;
		Int y;
		::String name;
		::String info;
		Int tile;
		Bool on_ground;
		::hx::EnumBase type;
		::hx::EnumBase armor_type;
		::hx::EnumBase weapon_type;
		::hx::EnumBase consumable_type;
		Int value;
		Int amount;
};


#endif /* INCLUDED_Item */ 
