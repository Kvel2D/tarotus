// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_haxegon_Keystate
#include <haxegon/Keystate.h>
#endif
namespace haxegon{

::haxegon::Keystate Keystate_obj::force_release;

::haxegon::Keystate Keystate_obj::just_pressed;

::haxegon::Keystate Keystate_obj::just_released;

::haxegon::Keystate Keystate_obj::notpressed;

::haxegon::Keystate Keystate_obj::pressed;

bool Keystate_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("force_release",33,f4,6e,d8)) { outValue = Keystate_obj::force_release; return true; }
	if (inName==HX_("just_pressed",4f,02,61,89)) { outValue = Keystate_obj::just_pressed; return true; }
	if (inName==HX_("just_released",70,10,57,b2)) { outValue = Keystate_obj::just_released; return true; }
	if (inName==HX_("notpressed",ef,91,6e,3b)) { outValue = Keystate_obj::notpressed; return true; }
	if (inName==HX_("pressed",a2,d2,e6,39)) { outValue = Keystate_obj::pressed; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Keystate_obj)

int Keystate_obj::__FindIndex(::String inName)
{
	if (inName==HX_("force_release",33,f4,6e,d8)) return 4;
	if (inName==HX_("just_pressed",4f,02,61,89)) return 3;
	if (inName==HX_("just_released",70,10,57,b2)) return 0;
	if (inName==HX_("notpressed",ef,91,6e,3b)) return 1;
	if (inName==HX_("pressed",a2,d2,e6,39)) return 2;
	return super::__FindIndex(inName);
}

int Keystate_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("force_release",33,f4,6e,d8)) return 0;
	if (inName==HX_("just_pressed",4f,02,61,89)) return 0;
	if (inName==HX_("just_released",70,10,57,b2)) return 0;
	if (inName==HX_("notpressed",ef,91,6e,3b)) return 0;
	if (inName==HX_("pressed",a2,d2,e6,39)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val Keystate_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("force_release",33,f4,6e,d8)) return force_release;
	if (inName==HX_("just_pressed",4f,02,61,89)) return just_pressed;
	if (inName==HX_("just_released",70,10,57,b2)) return just_released;
	if (inName==HX_("notpressed",ef,91,6e,3b)) return notpressed;
	if (inName==HX_("pressed",a2,d2,e6,39)) return pressed;
	return super::__Field(inName,inCallProp);
}

static ::String Keystate_obj_sStaticFields[] = {
	HX_("just_released",70,10,57,b2),
	HX_("notpressed",ef,91,6e,3b),
	HX_("pressed",a2,d2,e6,39),
	HX_("just_pressed",4f,02,61,89),
	HX_("force_release",33,f4,6e,d8),
	::String(null())
};

static void Keystate_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Keystate_obj::force_release,"force_release");
	HX_MARK_MEMBER_NAME(Keystate_obj::just_pressed,"just_pressed");
	HX_MARK_MEMBER_NAME(Keystate_obj::just_released,"just_released");
	HX_MARK_MEMBER_NAME(Keystate_obj::notpressed,"notpressed");
	HX_MARK_MEMBER_NAME(Keystate_obj::pressed,"pressed");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Keystate_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Keystate_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Keystate_obj::force_release,"force_release");
	HX_VISIT_MEMBER_NAME(Keystate_obj::just_pressed,"just_pressed");
	HX_VISIT_MEMBER_NAME(Keystate_obj::just_released,"just_released");
	HX_VISIT_MEMBER_NAME(Keystate_obj::notpressed,"notpressed");
	HX_VISIT_MEMBER_NAME(Keystate_obj::pressed,"pressed");
};
#endif

hx::Class Keystate_obj::__mClass;

Dynamic __Create_Keystate_obj() { return new Keystate_obj; }

void Keystate_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("haxegon.Keystate","\x80","\x39","\xe8","\x0f"), hx::TCanCast< Keystate_obj >,Keystate_obj_sStaticFields,0,
	&__Create_Keystate_obj, &__Create,
	&super::__SGetClass(), &CreateKeystate_obj, Keystate_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , Keystate_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Keystate_obj::__GetStatic;
}

void Keystate_obj::__boot()
{
force_release = hx::CreateEnum< Keystate_obj >(HX_HCSTRING("force_release","\x33","\xf4","\x6e","\xd8"),4,0);
just_pressed = hx::CreateEnum< Keystate_obj >(HX_HCSTRING("just_pressed","\x4f","\x02","\x61","\x89"),3,0);
just_released = hx::CreateEnum< Keystate_obj >(HX_HCSTRING("just_released","\x70","\x10","\x57","\xb2"),0,0);
notpressed = hx::CreateEnum< Keystate_obj >(HX_HCSTRING("notpressed","\xef","\x91","\x6e","\x3b"),1,0);
pressed = hx::CreateEnum< Keystate_obj >(HX_HCSTRING("pressed","\xa2","\xd2","\xe6","\x39"),2,0);
}


} // end namespace haxegon
