// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Tiles
#include <Tiles.h>
#endif


void Tiles_obj::__construct() { }

Dynamic Tiles_obj::__CreateEmpty() { return new Tiles_obj; }

hx::ObjectPtr< Tiles_obj > Tiles_obj::__new()
{
	hx::ObjectPtr< Tiles_obj > _hx_result = new Tiles_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Tiles_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Tiles_obj > _hx_result = new Tiles_obj();
	_hx_result->__construct();
	return _hx_result;
}

Int Tiles_obj::tileset_width;

Int Tiles_obj::tilenum(Int x,Int y){
            	HX_STACK_FRAME("Tiles","tilenum",0x64f61fcf,"Tiles.tilenum","Tiles.hx",6,0x75058279)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(   6)		return ((y * (int)10) + x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Tiles_obj,tilenum,return )

Int Tiles_obj::Wilhelm;

Int Tiles_obj::Player;

Int Tiles_obj::Wall;

Int Tiles_obj::Space;

Int Tiles_obj::Dude;

Int Tiles_obj::Box;

Int Tiles_obj::Ball;

Int Tiles_obj::Stick;

Int Tiles_obj::Chest;

Int Tiles_obj::Head;

Int Tiles_obj::Legs;

Int Tiles_obj::Potion;

Int Tiles_obj::Sword;

Int Tiles_obj::Spear;

Int Tiles_obj::Bow;

Int Tiles_obj::Fist;

Int Tiles_obj::Arrows;


Tiles_obj::Tiles_obj()
{
}

bool Tiles_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"tilenum") ) { outValue = tilenum_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Tiles_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Tiles_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Tiles_obj::tileset_width,HX_HCSTRING("tileset_width","\x7b","\x5d","\x50","\xbf")},
	{hx::fsInt,(void *) &Tiles_obj::Wilhelm,HX_HCSTRING("Wilhelm","\xb8","\x17","\x96","\x91")},
	{hx::fsInt,(void *) &Tiles_obj::Player,HX_HCSTRING("Player","\x81","\x5f","\x4d","\x6c")},
	{hx::fsInt,(void *) &Tiles_obj::Wall,HX_HCSTRING("Wall","\x2a","\x89","\xcb","\x39")},
	{hx::fsInt,(void *) &Tiles_obj::Space,HX_HCSTRING("Space","\xa6","\xfc","\x93","\x14")},
	{hx::fsInt,(void *) &Tiles_obj::Dude,HX_HCSTRING("Dude","\x72","\xa1","\x4b","\x2d")},
	{hx::fsInt,(void *) &Tiles_obj::Box,HX_HCSTRING("Box","\xeb","\x75","\x32","\x00")},
	{hx::fsInt,(void *) &Tiles_obj::Ball,HX_HCSTRING("Ball","\x1f","\x0e","\xea","\x2b")},
	{hx::fsInt,(void *) &Tiles_obj::Stick,HX_HCSTRING("Stick","\x30","\xe9","\x3e","\x17")},
	{hx::fsInt,(void *) &Tiles_obj::Chest,HX_HCSTRING("Chest","\xa1","\x16","\xe4","\xd8")},
	{hx::fsInt,(void *) &Tiles_obj::Head,HX_HCSTRING("Head","\x40","\x55","\xe4","\x2f")},
	{hx::fsInt,(void *) &Tiles_obj::Legs,HX_HCSTRING("Legs","\x05","\x35","\x89","\x32")},
	{hx::fsInt,(void *) &Tiles_obj::Potion,HX_HCSTRING("Potion","\x73","\x0f","\x04","\x33")},
	{hx::fsInt,(void *) &Tiles_obj::Sword,HX_HCSTRING("Sword","\x9d","\x27","\x3f","\x19")},
	{hx::fsInt,(void *) &Tiles_obj::Spear,HX_HCSTRING("Spear","\xf9","\x03","\x97","\x14")},
	{hx::fsInt,(void *) &Tiles_obj::Bow,HX_HCSTRING("Bow","\xea","\x75","\x32","\x00")},
	{hx::fsInt,(void *) &Tiles_obj::Fist,HX_HCSTRING("Fist","\xc4","\x00","\x95","\x2e")},
	{hx::fsInt,(void *) &Tiles_obj::Arrows,HX_HCSTRING("Arrows","\xaa","\x8a","\x8f","\xec")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Tiles_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Tiles_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Tiles_obj::tileset_width,"tileset_width");
	HX_MARK_MEMBER_NAME(Tiles_obj::Wilhelm,"Wilhelm");
	HX_MARK_MEMBER_NAME(Tiles_obj::Player,"Player");
	HX_MARK_MEMBER_NAME(Tiles_obj::Wall,"Wall");
	HX_MARK_MEMBER_NAME(Tiles_obj::Space,"Space");
	HX_MARK_MEMBER_NAME(Tiles_obj::Dude,"Dude");
	HX_MARK_MEMBER_NAME(Tiles_obj::Box,"Box");
	HX_MARK_MEMBER_NAME(Tiles_obj::Ball,"Ball");
	HX_MARK_MEMBER_NAME(Tiles_obj::Stick,"Stick");
	HX_MARK_MEMBER_NAME(Tiles_obj::Chest,"Chest");
	HX_MARK_MEMBER_NAME(Tiles_obj::Head,"Head");
	HX_MARK_MEMBER_NAME(Tiles_obj::Legs,"Legs");
	HX_MARK_MEMBER_NAME(Tiles_obj::Potion,"Potion");
	HX_MARK_MEMBER_NAME(Tiles_obj::Sword,"Sword");
	HX_MARK_MEMBER_NAME(Tiles_obj::Spear,"Spear");
	HX_MARK_MEMBER_NAME(Tiles_obj::Bow,"Bow");
	HX_MARK_MEMBER_NAME(Tiles_obj::Fist,"Fist");
	HX_MARK_MEMBER_NAME(Tiles_obj::Arrows,"Arrows");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Tiles_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Tiles_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Tiles_obj::tileset_width,"tileset_width");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Wilhelm,"Wilhelm");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Player,"Player");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Wall,"Wall");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Space,"Space");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Dude,"Dude");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Box,"Box");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Ball,"Ball");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Stick,"Stick");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Chest,"Chest");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Head,"Head");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Legs,"Legs");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Potion,"Potion");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Sword,"Sword");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Spear,"Spear");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Bow,"Bow");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Fist,"Fist");
	HX_VISIT_MEMBER_NAME(Tiles_obj::Arrows,"Arrows");
};

#endif

hx::Class Tiles_obj::__mClass;

static ::String Tiles_obj_sStaticFields[] = {
	HX_HCSTRING("tileset_width","\x7b","\x5d","\x50","\xbf"),
	HX_HCSTRING("tilenum","\xd8","\xc3","\x8f","\x45"),
	HX_HCSTRING("Wilhelm","\xb8","\x17","\x96","\x91"),
	HX_HCSTRING("Player","\x81","\x5f","\x4d","\x6c"),
	HX_HCSTRING("Wall","\x2a","\x89","\xcb","\x39"),
	HX_HCSTRING("Space","\xa6","\xfc","\x93","\x14"),
	HX_HCSTRING("Dude","\x72","\xa1","\x4b","\x2d"),
	HX_HCSTRING("Box","\xeb","\x75","\x32","\x00"),
	HX_HCSTRING("Ball","\x1f","\x0e","\xea","\x2b"),
	HX_HCSTRING("Stick","\x30","\xe9","\x3e","\x17"),
	HX_HCSTRING("Chest","\xa1","\x16","\xe4","\xd8"),
	HX_HCSTRING("Head","\x40","\x55","\xe4","\x2f"),
	HX_HCSTRING("Legs","\x05","\x35","\x89","\x32"),
	HX_HCSTRING("Potion","\x73","\x0f","\x04","\x33"),
	HX_HCSTRING("Sword","\x9d","\x27","\x3f","\x19"),
	HX_HCSTRING("Spear","\xf9","\x03","\x97","\x14"),
	HX_HCSTRING("Bow","\xea","\x75","\x32","\x00"),
	HX_HCSTRING("Fist","\xc4","\x00","\x95","\x2e"),
	HX_HCSTRING("Arrows","\xaa","\x8a","\x8f","\xec"),
	::String(null())
};

void Tiles_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Tiles","\x65","\x6d","\x62","\xa3");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Tiles_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Tiles_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Tiles_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Tiles_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Tiles_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Tiles_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Tiles_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Tiles_obj::__boot()
{
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",4,0x75058279)
HXLINE(   4)		tileset_width = (int)10;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",9,0x75058279)
HXLINE(   9)		Wilhelm = (int)10;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",11,0x75058279)
HXLINE(  11)		Player = (int)0;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",12,0x75058279)
HXLINE(  12)		Wall = (int)1;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",13,0x75058279)
HXLINE(  13)		Space = (int)2;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",14,0x75058279)
HXLINE(  14)		Dude = (int)3;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",15,0x75058279)
HXLINE(  15)		Box = (int)4;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",16,0x75058279)
HXLINE(  16)		Ball = (int)5;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",17,0x75058279)
HXLINE(  17)		Stick = (int)6;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",18,0x75058279)
HXLINE(  18)		Chest = (int)7;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",19,0x75058279)
HXLINE(  19)		Head = (int)15;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",20,0x75058279)
HXLINE(  20)		Legs = (int)16;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",21,0x75058279)
HXLINE(  21)		Potion = (int)8;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",22,0x75058279)
HXLINE(  22)		Sword = (int)9;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",23,0x75058279)
HXLINE(  23)		Spear = (int)19;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",24,0x75058279)
HXLINE(  24)		Bow = (int)18;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",25,0x75058279)
HXLINE(  25)		Fist = (int)17;
            	}
{
            	HX_STACK_FRAME("Tiles","boot",0xdf4817db,"Tiles.boot","Tiles.hx",26,0x75058279)
HXLINE(  26)		Arrows = (int)14;
            	}
}

