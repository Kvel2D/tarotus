// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl__internal_stage3D__AGALConverter_RegisterUsage
#include <openfl/_internal/stage3D/_AGALConverter/RegisterUsage.h>
#endif
namespace openfl{
namespace _internal{
namespace stage3D{
namespace _AGALConverter{

::openfl::_internal::stage3D::_AGALConverter::RegisterUsage RegisterUsage_obj::Matrix44;

::openfl::_internal::stage3D::_AGALConverter::RegisterUsage RegisterUsage_obj::Sampler2D;

::openfl::_internal::stage3D::_AGALConverter::RegisterUsage RegisterUsage_obj::Sampler2DAlpha;

::openfl::_internal::stage3D::_AGALConverter::RegisterUsage RegisterUsage_obj::SamplerCube;

::openfl::_internal::stage3D::_AGALConverter::RegisterUsage RegisterUsage_obj::Unused;

::openfl::_internal::stage3D::_AGALConverter::RegisterUsage RegisterUsage_obj::Vector4;

::openfl::_internal::stage3D::_AGALConverter::RegisterUsage RegisterUsage_obj::Vector4Array;

bool RegisterUsage_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Matrix44",21,f2,a4,40)) { outValue = RegisterUsage_obj::Matrix44; return true; }
	if (inName==HX_("Sampler2D",ba,22,5e,ff)) { outValue = RegisterUsage_obj::Sampler2D; return true; }
	if (inName==HX_("Sampler2DAlpha",44,d2,4b,c1)) { outValue = RegisterUsage_obj::Sampler2DAlpha; return true; }
	if (inName==HX_("SamplerCube",fd,e9,99,38)) { outValue = RegisterUsage_obj::SamplerCube; return true; }
	if (inName==HX_("Unused",36,0d,17,a0)) { outValue = RegisterUsage_obj::Unused; return true; }
	if (inName==HX_("Vector4",f1,21,ee,a7)) { outValue = RegisterUsage_obj::Vector4; return true; }
	if (inName==HX_("Vector4Array",e8,11,f9,b4)) { outValue = RegisterUsage_obj::Vector4Array; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(RegisterUsage_obj)

int RegisterUsage_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Matrix44",21,f2,a4,40)) return 2;
	if (inName==HX_("Sampler2D",ba,22,5e,ff)) return 3;
	if (inName==HX_("Sampler2DAlpha",44,d2,4b,c1)) return 4;
	if (inName==HX_("SamplerCube",fd,e9,99,38)) return 5;
	if (inName==HX_("Unused",36,0d,17,a0)) return 0;
	if (inName==HX_("Vector4",f1,21,ee,a7)) return 1;
	if (inName==HX_("Vector4Array",e8,11,f9,b4)) return 6;
	return super::__FindIndex(inName);
}

int RegisterUsage_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Matrix44",21,f2,a4,40)) return 0;
	if (inName==HX_("Sampler2D",ba,22,5e,ff)) return 0;
	if (inName==HX_("Sampler2DAlpha",44,d2,4b,c1)) return 0;
	if (inName==HX_("SamplerCube",fd,e9,99,38)) return 0;
	if (inName==HX_("Unused",36,0d,17,a0)) return 0;
	if (inName==HX_("Vector4",f1,21,ee,a7)) return 0;
	if (inName==HX_("Vector4Array",e8,11,f9,b4)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val RegisterUsage_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Matrix44",21,f2,a4,40)) return Matrix44;
	if (inName==HX_("Sampler2D",ba,22,5e,ff)) return Sampler2D;
	if (inName==HX_("Sampler2DAlpha",44,d2,4b,c1)) return Sampler2DAlpha;
	if (inName==HX_("SamplerCube",fd,e9,99,38)) return SamplerCube;
	if (inName==HX_("Unused",36,0d,17,a0)) return Unused;
	if (inName==HX_("Vector4",f1,21,ee,a7)) return Vector4;
	if (inName==HX_("Vector4Array",e8,11,f9,b4)) return Vector4Array;
	return super::__Field(inName,inCallProp);
}

static ::String RegisterUsage_obj_sStaticFields[] = {
	HX_("Unused",36,0d,17,a0),
	HX_("Vector4",f1,21,ee,a7),
	HX_("Matrix44",21,f2,a4,40),
	HX_("Sampler2D",ba,22,5e,ff),
	HX_("Sampler2DAlpha",44,d2,4b,c1),
	HX_("SamplerCube",fd,e9,99,38),
	HX_("Vector4Array",e8,11,f9,b4),
	::String(null())
};

static void RegisterUsage_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(RegisterUsage_obj::Matrix44,"Matrix44");
	HX_MARK_MEMBER_NAME(RegisterUsage_obj::Sampler2D,"Sampler2D");
	HX_MARK_MEMBER_NAME(RegisterUsage_obj::Sampler2DAlpha,"Sampler2DAlpha");
	HX_MARK_MEMBER_NAME(RegisterUsage_obj::SamplerCube,"SamplerCube");
	HX_MARK_MEMBER_NAME(RegisterUsage_obj::Unused,"Unused");
	HX_MARK_MEMBER_NAME(RegisterUsage_obj::Vector4,"Vector4");
	HX_MARK_MEMBER_NAME(RegisterUsage_obj::Vector4Array,"Vector4Array");
};

#ifdef HXCPP_VISIT_ALLOCS
static void RegisterUsage_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::Matrix44,"Matrix44");
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::Sampler2D,"Sampler2D");
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::Sampler2DAlpha,"Sampler2DAlpha");
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::SamplerCube,"SamplerCube");
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::Unused,"Unused");
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::Vector4,"Vector4");
	HX_VISIT_MEMBER_NAME(RegisterUsage_obj::Vector4Array,"Vector4Array");
};
#endif

hx::Class RegisterUsage_obj::__mClass;

Dynamic __Create_RegisterUsage_obj() { return new RegisterUsage_obj; }

void RegisterUsage_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("openfl._internal.stage3D._AGALConverter.RegisterUsage","\x8f","\x93","\xf5","\x03"), hx::TCanCast< RegisterUsage_obj >,RegisterUsage_obj_sStaticFields,0,
	&__Create_RegisterUsage_obj, &__Create,
	&super::__SGetClass(), &CreateRegisterUsage_obj, RegisterUsage_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , RegisterUsage_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &RegisterUsage_obj::__GetStatic;
}

void RegisterUsage_obj::__boot()
{
Matrix44 = hx::CreateEnum< RegisterUsage_obj >(HX_HCSTRING("Matrix44","\x21","\xf2","\xa4","\x40"),2,0);
Sampler2D = hx::CreateEnum< RegisterUsage_obj >(HX_HCSTRING("Sampler2D","\xba","\x22","\x5e","\xff"),3,0);
Sampler2DAlpha = hx::CreateEnum< RegisterUsage_obj >(HX_HCSTRING("Sampler2DAlpha","\x44","\xd2","\x4b","\xc1"),4,0);
SamplerCube = hx::CreateEnum< RegisterUsage_obj >(HX_HCSTRING("SamplerCube","\xfd","\xe9","\x99","\x38"),5,0);
Unused = hx::CreateEnum< RegisterUsage_obj >(HX_HCSTRING("Unused","\x36","\x0d","\x17","\xa0"),0,0);
Vector4 = hx::CreateEnum< RegisterUsage_obj >(HX_HCSTRING("Vector4","\xf1","\x21","\xee","\xa7"),1,0);
Vector4Array = hx::CreateEnum< RegisterUsage_obj >(HX_HCSTRING("Vector4Array","\xe8","\x11","\xf9","\xb4"),6,0);
}


} // end namespace openfl
} // end namespace _internal
} // end namespace stage3D
} // end namespace _AGALConverter
