// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_WeaponType
#include <WeaponType.h>
#endif

::WeaponType WeaponType_obj::WeaponType_Bow;

::WeaponType WeaponType_obj::WeaponType_None;

::WeaponType WeaponType_obj::WeaponType_Spear;

::WeaponType WeaponType_obj::WeaponType_Sword;

bool WeaponType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("WeaponType_Bow",c1,b5,56,97)) { outValue = WeaponType_obj::WeaponType_Bow; return true; }
	if (inName==HX_("WeaponType_None",21,db,76,dc)) { outValue = WeaponType_obj::WeaponType_None; return true; }
	if (inName==HX_("WeaponType_Spear",90,27,2c,ed)) { outValue = WeaponType_obj::WeaponType_Spear; return true; }
	if (inName==HX_("WeaponType_Sword",34,4b,d4,f1)) { outValue = WeaponType_obj::WeaponType_Sword; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(WeaponType_obj)

int WeaponType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("WeaponType_Bow",c1,b5,56,97)) return 3;
	if (inName==HX_("WeaponType_None",21,db,76,dc)) return 0;
	if (inName==HX_("WeaponType_Spear",90,27,2c,ed)) return 2;
	if (inName==HX_("WeaponType_Sword",34,4b,d4,f1)) return 1;
	return super::__FindIndex(inName);
}

int WeaponType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("WeaponType_Bow",c1,b5,56,97)) return 0;
	if (inName==HX_("WeaponType_None",21,db,76,dc)) return 0;
	if (inName==HX_("WeaponType_Spear",90,27,2c,ed)) return 0;
	if (inName==HX_("WeaponType_Sword",34,4b,d4,f1)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val WeaponType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("WeaponType_Bow",c1,b5,56,97)) return WeaponType_Bow;
	if (inName==HX_("WeaponType_None",21,db,76,dc)) return WeaponType_None;
	if (inName==HX_("WeaponType_Spear",90,27,2c,ed)) return WeaponType_Spear;
	if (inName==HX_("WeaponType_Sword",34,4b,d4,f1)) return WeaponType_Sword;
	return super::__Field(inName,inCallProp);
}

static ::String WeaponType_obj_sStaticFields[] = {
	HX_("WeaponType_None",21,db,76,dc),
	HX_("WeaponType_Sword",34,4b,d4,f1),
	HX_("WeaponType_Spear",90,27,2c,ed),
	HX_("WeaponType_Bow",c1,b5,56,97),
	::String(null())
};

static void WeaponType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(WeaponType_obj::WeaponType_Bow,"WeaponType_Bow");
	HX_MARK_MEMBER_NAME(WeaponType_obj::WeaponType_None,"WeaponType_None");
	HX_MARK_MEMBER_NAME(WeaponType_obj::WeaponType_Spear,"WeaponType_Spear");
	HX_MARK_MEMBER_NAME(WeaponType_obj::WeaponType_Sword,"WeaponType_Sword");
};

#ifdef HXCPP_VISIT_ALLOCS
static void WeaponType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(WeaponType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(WeaponType_obj::WeaponType_Bow,"WeaponType_Bow");
	HX_VISIT_MEMBER_NAME(WeaponType_obj::WeaponType_None,"WeaponType_None");
	HX_VISIT_MEMBER_NAME(WeaponType_obj::WeaponType_Spear,"WeaponType_Spear");
	HX_VISIT_MEMBER_NAME(WeaponType_obj::WeaponType_Sword,"WeaponType_Sword");
};
#endif

hx::Class WeaponType_obj::__mClass;

Dynamic __Create_WeaponType_obj() { return new WeaponType_obj; }

void WeaponType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("WeaponType","\xd6","\x57","\xa1","\x5f"), hx::TCanCast< WeaponType_obj >,WeaponType_obj_sStaticFields,0,
	&__Create_WeaponType_obj, &__Create,
	&super::__SGetClass(), &CreateWeaponType_obj, WeaponType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , WeaponType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &WeaponType_obj::__GetStatic;
}

void WeaponType_obj::__boot()
{
WeaponType_Bow = hx::CreateEnum< WeaponType_obj >(HX_HCSTRING("WeaponType_Bow","\xc1","\xb5","\x56","\x97"),3,0);
WeaponType_None = hx::CreateEnum< WeaponType_obj >(HX_HCSTRING("WeaponType_None","\x21","\xdb","\x76","\xdc"),0,0);
WeaponType_Spear = hx::CreateEnum< WeaponType_obj >(HX_HCSTRING("WeaponType_Spear","\x90","\x27","\x2c","\xed"),2,0);
WeaponType_Sword = hx::CreateEnum< WeaponType_obj >(HX_HCSTRING("WeaponType_Sword","\x34","\x4b","\xd4","\xf1"),1,0);
}


